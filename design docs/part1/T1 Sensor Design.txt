Agent: Sensor
	Data
		Conveyor conveyor;
		Popup popup;
		State state = NO_GLASS;
		boolean expectingGlassOnConv;
		boolean expectingGlassonPopup;
		
		enum State {NEW_GLASS, TREATING_GLASS, TREATED_GLASS, NO_GLASS};
			
	Messages
		msgAmIReady(Conveyor c) {				// from conveyor to entry
			expectingGlassOnConv = true;
			stateChanged();
		}
		
		msgAmIReady(Popup p) {					// from popup to pre
			expectingGlassonPopup = true;
			stateChanged();
		}
		
		msgIHaveGlass(Conveyor c) {				// from conveyor to entry
			state = NEW_GLASS;
			stateChanged();
		}
		
		msgIHaveGlass(Popup p) {				// from popup to pre
			state = TREATING_GLASS;
			stateChanged();
		}
		
		msgIsConvReady() {						// from popup to post
			expectingGlassOnConv = true;
			stateChanged();
		}
		
		msgGlassReadyToLeave() {				// from conveyor to exit
			state = TREATED_GLASS;
			stateChanged();
		}
		
		msgDoneWithGlass() {					// from conveyor/popup to exit/post
			state = NO_GLASS;
			stateChanged();
		}
	
	Scheduler
		if (expectingGlassOnConv) {
			if (state == NO_GLASS) {
				informConveyorReady();
				expectingGlassOnConv = false;
				state = NEW_GLASS;
				return true;
			}
			if (state == TREATED_GLASS) {
				informPopupConvReady();
				expectingGlassOnConv = false;
				return true;
			}
		}
		if (expectingGlassonPopup) {
			if (state != TREATING_GLASS) {
				informPopupReady();
				expectingGlassonPopup = false;
				state = TREATING_GLASS;
				return true;
			}
		}
		if (state == NO_GLASS || state == TREATED_GLASS) {
			informConvClear();
			return true;
		}
	
	Actions
		informConveyorReady() {
			conveyor.msgYouAreReady();
			stateChanged();
		}
		
		informPopupReady() {
			popup.msgYouAreReady();
			stateChanged();
		}
		
		informPopupConvReady() {
			popup.msgConvIsReady();
			stateChanged();
		}
		
		informConvClear() {
			conveyor.msgClear();
			stateChanged();
		}